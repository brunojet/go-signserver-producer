name: Terraform Deploy - Persistence

on:
  push:
    branches:
      - develop
      - master
      - 'release*'
    paths:
      - 'infra/persistence/**'
      - '.github/workflows/terraform-persistence.yml'
  pull_request:
    branches:
      - develop
      - master
      - 'release*'
    paths:
      - 'infra/persistence/**'
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: aws-brunojet

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Carregar variáveis de ambiente
        working-directory: infra/persistence
        run: bash ./load_env.sh
        shell: bash

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Altere para sua região se necessário

      - name: Terraform Init
        working-directory: infra/persistence
        run: terraform init

      - name: Terraform Format
        working-directory: infra/persistence
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: infra/persistence
        run: terraform validate

      - name: Terraform Plan (Pull Request ou Push)
        working-directory: infra/persistence
        run: terraform plan -out=planfile -var="environment=$ENVIRONMENT" -var="project=$PROJECT"
        shell: bash

      - name: Terraform Apply (Merge em develop, release ou master)
        if: github.event_name == 'push'
        working-directory: infra/persistence
        run: |
          terraform apply -auto-approve planfile
          terraform output
        shell: bash

      - name: Clean up planfile
        working-directory: infra/persistence
        run: rm -f planfile
