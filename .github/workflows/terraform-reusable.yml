name: Terraform Reusable Workflow

description: >
  Workflow reutilizável para operações Terraform (init, workspace, plan, apply, etc.)

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
      environment:
        required: true
        type: string
      main_flow:
        required: false
        type: boolean
        default: false
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    if: ${{ inputs.main_flow || (github.event_name == 'workflow_run') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Carregar variáveis de ambiente e workspace
        run: |
          source ./iac/terraform_common.sh
          setup_terraform_env
        shell: bash

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        working-directory: ${{ inputs.working-directory }}
        run: terraform init

      - name: Selecionar workspace do Terraform
        working-directory: ${{ inputs.working-directory }}
        run: |
          source ../../terraform_common.sh
          select_or_create_workspace
        shell: bash

      - name: Terraform Format
        working-directory: ${{ inputs.working-directory }}
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: ${{ inputs.working-directory }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ${{ inputs.working-directory }}
        run: terraform plan -out=planfile
        shell: bash

      - name: Terraform Apply
        if: github.event_name == 'push' || github.event.workflow_run.conclusion == 'success'
        working-directory: ${{ inputs.working-directory }}
        run: |
          terraform apply -auto-approve planfile
          terraform output
        shell: bash

      - name: Clean up planfile
        working-directory: ${{ inputs.working-directory }}
        run: rm -f planfile
